{ pkgs, ... }:
{
  extraPlugins = with pkgs.vimUtils; [
    (buildVimPlugin {
      name = "rzls-nvim";
      src = pkgs.fetchFromGitHub {
        owner = "tris203";
        repo = "rzls.nvim";
        rev = "main";
        sha256 = "sha256-tZDH6VDRKaRaoSuz3zyeN/omoAwOf5So8PGUXHt2TLk=";
      };
    })

    (buildVimPlugin {
      name = "roslyn-nvim";
      src = pkgs.fetchFromGitHub {
        owner = "seblyng";
        repo = "roslyn.nvim";
        rev = "main";
        sha256 = "sha256-tZDH6VDRKaRaoSuz3zyeN/omoAwOf5So8PGUXHt2TLk=";
      };
    })
  ];

  extraConfigLuaPre = ''
    vim.filetype.add({
      extension = {
        razor = "razor",
        cshtml = "razor",
      }
    })
  '';

  extraConfigLua = ''
    local roslyn_base_path = vim.fs.joinpath(vim.fn.stdpath("data"), "roslyn")
    local rzls_base_path = vim.fs.joinpath(vim.fn.stdpath("data"), "rzls")
    local cmd = {
        "dotnet",
        vim.fs.joinpath(roslyn_base_path, "Microsoft.CodeAnalysis.LanguageServer.dll"),
        "--stdio",
        "--logLevel=Information",
        "--extensionLogDirectory=" .. vim.fs.dirname(vim.lsp.get_log_path()),
        "--razorSourceGenerator=" .. vim.fs.joinpath(rzls_base_path, "Microsoft.CodeAnalysis.Razor.Compiler.dll"),
        "--razorDesignTimePath="
            .. vim.fs.joinpath(rzls_base_path, "Targets", "Microsoft.NET.Sdk.Razor.DesignTime.targets"),
    }
        require('roslyn').setup({
          dependencies = {
            'tris203/rzls.nvim'
          },
          config  = function()
            local cmd = { "rzls", "--stdio" }
            vim.lsp.start({
              name = 'roslyn',
              cmd = cmd,
              handlers = require('rzls.roslyn_handlers'),
              settings = {
                ["csharp|inlay_hints"] = {
                  csharp_enable_inlay_hints_for_implicit_object_creation = true,
                  csharp_enable_inlay_hints_for_implicit_variable_types = true,
                  csharp_enable_inlay_hints_for_lambda_parameter_types = true,
                  csharp_enable_inlay_hints_for_types = true,
                  dotnet_enable_inlay_hints_for_indexer_parameters = true,
                  dotnet_enable_inlay_hints_for_literal_parameters = true,
                  dotnet_enable_inlay_hints_for_object_creation_parameters = true,
                  dotnet_enable_inlay_hints_for_other_parameters = true,
                  dotnet_enable_inlay_hints_for_parameters = true,
                  dotnet_suppress_inlay_hints_for_parameters_that_differ_only_by_suffix = true,
                  dotnet_suppress_inlay_hints_for_parameters_that_match_argument_name = true,
                  dotnet_suppress_inlay_hints_for_parameters_that_match_method_intent = true,
                },
                ["csharp|code_lens"] = {
                  dotnet_enable_references_code_lens = true,
                },
              },
            })
            end
        })
  '';
}
